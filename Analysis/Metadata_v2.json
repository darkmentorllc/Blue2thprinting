{
	"Created by Xeno Kovah": {"Copyright(c) ©": "Dark Mentor LLC 2023-2024"},
	"Tesla Model 3 or Y": {
		"comment": "This is close to the maximum data we would like to have about a device. But if new fields are determined later that we'd like to add, they can be added too.",
		"2thprint_Chip": "TI CC2640",
		"2thprint_Chip_Datasheet": "https://www.ti.com/lit/ds/symlink/cc2640r2f.pdf",
		"2thprint_Chip_Maker": "Texas Instruments",
		"2thprint_Device_Model": "Tesla Model 3 or Y",
		"2thprint_NamePrint": "^S[0-9a-f]{16}C$",
		"NamePrint_UniqueID": "True",
		"short_description": "An electric car, which uses Bluetooth proximity to a smartphone or dongle key for unlocking and starting the car.",
		"company_website": "https://tesla.com",
		"security_research_urls": {
			"BLE Proximity Authentication Vulnerable to Relay Attacks": "https://darkmentor.com/bt.html#BLE%20Proximity%20Authentication%20Vulnerable%20to%20Relay%20Attacks:%5B%5BBLE%20Proximity%20Authentication%20Vulnerable%20to%20Relay%20Attacks%5D%5D%20%5B%5BBluetooth%20Security%20Timeline%5D%5D%20%24%3A%2FTagManager",
			"Project TEMPA - Demystifying Tesla's Bluetooth Passive Entry system": "https://darkmentor.com/bt.html#Project%20TEMPA%20-%20Demystifying%20Tesla's%20Bluetooth%20Passive%20Entry%20system:%5B%5BProject%20TEMPA%20-%20Demystifying%20Tesla's%20Bluetooth%20Passive%20Entry%20system%5D%5D%20%5B%5BBluetooth%20Security%20Timeline%5D%5D%20%24%3A%2FTagManager"
		},
		"submitted_by": "Xeno Kovah",
		"submission_date": "2024-01-01",
		"evidence_URL": "https://fccid.io/2AEIM-1089773/Internal-Photos/Internal-Photos-3491654.pdf",
		"confirmed_by": "Xeno Kovah",
		"confirmation_date": "2024-01-01",
		"confirmation_method": "FCC_InternalPhotos",
		"confirmation_confidence": "10/10",
		"FCC_ID": "2AEIM-1089773",
		"FCC_ExternalPhotos": "https://fccid.io/2AEIM-1089773/External-Photos/External-Photos-3491653.pdf",
		"FCC_InternalPhotos": "https://fccid.io/2AEIM-1089773/Internal-Photos/Internal-Photos-3491654.pdf",
		"Vendor_Specific_UUIDs": {
			"00000211-b2d1-43f0-9b88-960cebf8b91e": "Service",
			"00000212-b2d1-43f0-9b88-960cebf8b91e": "'To Vehicle' Characteristic",
			"00000213-b2d1-43f0-9b88-960cebf8b91e": "'From Vehicle' Characteristic",
			"00000214-b2d1-43f0-9b88-960cebf8b91e": "'Version Info' Characteristic"
		}
	},
	"Tesla Keyfob": {
		"2thprint_Chip": "TI CC2640",
		"2thprint_Chip_Datasheet": "https://www.ti.com/lit/ds/symlink/cc2640r2f.pdf",
		"2thprint_Chip_Maker": "Texas Instruments",
		"2thprint_Device_Model": "Tesla Keyfob",
		"2thprint_NamePrint": "^Tesla Keyfob$",
		"short_description": "Keyfob for Tesla electric cars, which uses Bluetooth proximity to a smartphone or dongle key for unlocking and starting the car. For use by those who can't, or don't want to, use their phone as a proximity key.",
		"company_website": "https://tesla.com",
		"security_research_urls": {
			"BLE Proximity Authentication Vulnerable to Relay Attacks": "https://darkmentor.com/bt.html#BLE%20Proximity%20Authentication%20Vulnerable%20to%20Relay%20Attacks:%5B%5BBLE%20Proximity%20Authentication%20Vulnerable%20to%20Relay%20Attacks%5D%5D%20%5B%5BBluetooth%20Security%20Timeline%5D%5D%20%24%3A%2FTagManager",
			"Project TEMPA - Demystifying Tesla's Bluetooth Passive Entry system": "https://darkmentor.com/bt.html#Project%20TEMPA%20-%20Demystifying%20Tesla's%20Bluetooth%20Passive%20Entry%20system:%5B%5BProject%20TEMPA%20-%20Demystifying%20Tesla's%20Bluetooth%20Passive%20Entry%20system%5D%5D%20%5B%5BBluetooth%20Security%20Timeline%5D%5D%20%24%3A%2FTagManager"
		},
		"submitted_by": "Xeno Kovah",
		"submission_date": "2024-01-01",
		"evidence_URL": "https://fccid.io/2AEIM-1133148/Internal-Photos/Internal-Photos-3989913.pdf",
		"confirmed_by": "Xeno Kovah",
		"confirmation_date": "2024-01-01",
		"confirmation_method": "FCC_InternalPhotos",
		"confirmation_confidence": "10/10",
		"FCC_ID": "2AEIM-1133148",
		"FCC_ExternalPhotos": "https://fccid.io/2AEIM-1133148/External-Photos/External-Photos-3989912.pdf",
		"FCC_InternalPhotos": "https://fccid.io/2AEIM-1133148/Internal-Photos/Internal-Photos-3989913.pdf"
	},
	"Atmel GATTPrints": {
		"comment": "This is information about GATT services which are uniquely associated with this ChipMaker",
		"2thprint_Chip_Maker": "Atmel Corporation (acquired by Microchip Technology Inc.)",
		"company_website": "https://microchip.com",
		"submitted_by": "Xeno Kovah",
		"submission_date": "2025-01-19",
		"evidence_URL": {
				"ATWILC3000": "https://web.archive.org/web/20250119140358/https://ww1.microchip.com/downloads/aemDocuments/documents/OTH/ProductDocuments/UserGuides/Atmel-42683-ATWINC3400-BLE-WiFi-Scan-and-Connect-Services-Guide_UserGuide.pdf"
		},
		"confirmed_by": "Xeno Kovah",
		"confirmation_date": "2025-01-19",
		"confirmation_method": "evidence_URL",
		"confirmation_confidence": "10/10",
		"2thprint_ChipMaker_GATTprint": "True",
		"Vendor_Specific_UUIDs": {
			"77880001-d229-11e4-8689-0002a5d5c51b": "Service: Microchip Technology Inc. (formerly Atmel): Wi-Fi Connect/Provisioning",
			"fb8c0001-d224-11e4-85a1-0002a5d5c51b": "Service: Microchip Technology Inc. (formerly Atmel): Wi-Fi Scan"
		}
	},
	"Barrot": {
		"2thprint_Chip_Maker": "Barrot Technology Co.,Ltd.",
		"company_website": "http://en.barrot.com.cn/",
		"submitted_by": "Xeno Kovah",
		"submission_date": "2024-04-22",
		"evidence_URL": {
			"Assigned numbers": "public/assigned_numbers/uuids/member_uuids.yaml"
		},
		"confirmed_by": "Xeno Kovah",
		"confirmation_date": "2024-04-22",
		"confirmation_method": "Unconfirmed. Just following pattern I'm using for adding other UUID16s from chipmakers in the assigned numbers doc.",
		"confirmation_confidence": "1/10",
		"2thprint_ChipMaker_GATTprint": "True",
		"Vendor_Specific_UUIDs": {
			"fcfd": "Advertisement: Barrot: Unknown (from public/assigned_numbers/uuids/member_uuids.yaml). Not observed in wild data. (Please report if you see this!)",
			"fcfc": "Advertisement: Barrot: Unknown (from public/assigned_numbers/uuids/member_uuids.yaml). Not observed in wild data. (Please report if you see this!)"
		}
	},
	"Broadcom": {
		"2thprint_Chip_Maker": "Broadcom Corporation",
		"company_website": "http://en.barrot.com.cn/",
		"submitted_by": "Xeno Kovah",
		"submission_date": "2024-04-22",
		"evidence_URL": {
			"Assigned numbers": "public/assigned_numbers/uuids/member_uuids.yaml"
		},
		"confirmed_by": "Xeno Kovah",
		"confirmation_date": "2024-04-22",
		"confirmation_method": "Unconfirmed. Just following pattern I'm using for adding other UUID16s from chipmakers in the assigned numbers doc.",
		"confirmation_confidence": "2/10",
		"2thprint_ChipMaker_GATTprint": "True",
		"Vendor_Specific_UUIDs": {
			"fed6": "Advertisement: Broadcom: Unknown (from public/assigned_numbers/uuids/member_uuids.yaml). Observed in wild data.",
			"fed7": "Advertisement: Broadcom: Unknown (from public/assigned_numbers/uuids/member_uuids.yaml). Not observed in wild data. (Please report if you see this!)"
		}
	},
	"Cambridge Silicon Radio (CSR) GATTPrints": {
		"comment": "This is information about GATT services which are uniquely associated with this ChipMaker",
		"2thprint_Chip_Maker": "Cambridge Silicon Radio (CSR) (acquired by Qualcomm)",
		"company_website": "https://www.qualcomm.com/",
		"submitted_by": "Xeno Kovah",
		"submission_date": "2024-01-01",
		"evidence_URL": {
			"CSR: GAIA (Over The Air firmware update protocol) 1": "https://web.archive.org/web/20220612094151/https://developer.qualcomm.com/qfile/34081/csr102x_otau_overview.pdf",
			"CSR: GAIA (Over The Air firmware update protocol) 2": "https://web.archive.org/web/20240618162011/https://github.com/Hypfer/fiio-bta30-protocol"
		},
		"confirmed_by": "Xeno Kovah",
		"confirmation_date": "2024-01-01",
		"confirmation_method": "evidence_URL",
		"confirmation_confidence": "10/10",
		"2thprint_ChipMaker_GATTprint": "True",
		"Vendor_Specific_UUIDs": {
			"fef1": "Service: CSR(->Qualcomm): Unknown (from public/assigned_numbers/uuids/member_uuids.yaml). Observed in wild data.",
			"fef2": "Service: CSR(->Qualcomm): Unknown (from public/assigned_numbers/uuids/member_uuids.yaml). Observed in wild data.",
			"fe8f": "Service: CSR(->Qualcomm): Unknown (from public/assigned_numbers/uuids/member_uuids.yaml). Observed in wild data.",
			"00001100-d102-11e1-9b23-00025b00a5a5": "Service: CSR(->Qualcomm): GAIA (Over The Air firmware update protocol)",
			"00001101-d102-11e1-9b23-00025b00a5a5": "Characteristic: CSR(->Qualcomm): GAIA (Over The Air firmware update protocol): Command Endpoint",
			"00001102-d102-11e1-9b23-00025b00a5a5": "Characteristic: CSR(->Qualcomm): GAIA (Over The Air firmware update protocol): Response Endpoint",
			"00001103-d102-11e1-9b23-00025b00a5a5": "Characteristic: CSR(->Qualcomm): GAIA (Over The Air firmware update protocol): Data Endpoint"
		}
	},
	"Casambi": {
		"2thprint_Chip_Maker": "Casambi Technologies Oy",
		"company_website": "https://casambi.com/",
		"submitted_by": "Xeno Kovah",
		"submission_date": "2024-04-22",
		"evidence_URL": {
			"Assigned numbers": "public/assigned_numbers/uuids/member_uuids.yaml"
		},
		"confirmed_by": "Xeno Kovah",
		"confirmation_date": "2024-04-22",
		"confirmation_method": "Unconfirmed. Just following pattern I'm using for adding other UUID16s from chipmakers in the assigned numbers doc.",
		"confirmation_confidence": "2/10",
		"2thprint_ChipMaker_GATTprint": "True",
		"Vendor_Specific_UUIDs": {
			"fe4d": "Advertisement: Casambi: Unknown (from public/assigned_numbers/uuids/member_uuids.yaml). Observed in wild data."
		}
	},
	"Cypress GATTPrints": {
		"comment": "This is information about GATT services which are uniquely associated with this ChipMaker",
		"2thprint_Chip_Maker": "Cypress",
		"company_website": "https://www.cypress.com/",
		"submitted_by": "Xeno Kovah",
		"submission_date": "2024-09-02",
		"evidence_URL": {
			"PSoC® Creator™ Example Project BLE External Memory Bootloader and Bootloadable Example Projects": "https://web.archive.org/web/20170908223844/https://www.cypress.com/file/228556/download"
		},
		"confirmed_by": "Xeno Kovah",
		"confirmation_date": "2024-09-02",
		"confirmation_method": "evidence_URL & looking at collected GATT data",
		"confirmation_confidence": "10/10",
		"2thprint_ChipMaker_GATTprint": "True",
		"Vendor_Specific_UUIDs": {
			"00060000-f8ce-11e4-abf4-0002a5d5c51b": "Service: Cypress: Bootloader",
			"00060001-f8ce-11e4-abf4-0002a5d5c51b": "Characteristic: Cypress: Bootloader Command"
		}
	},
	"Dialog Semiconductor GmbH": {
		"2thprint_Chip_Maker": "Dialog Semiconductor GmbH (acquired by Renesas)",
		"company_website": "http://en.barrot.com.cn/",
		"submitted_by": "Xeno Kovah",
		"submission_date": "2024-04-22",
		"evidence_URL": {
			"Acquisition confirmation": "https://web.archive.org/web/20250320085952/https://www.renesas.com/en/about/newsroom/renesas-completes-acquisition-dialog-semiconductor",
			"Assigned numbers": "public/assigned_numbers/uuids/member_uuids.yaml"
		},
		"confirmed_by": "Xeno Kovah",
		"confirmation_date": "2024-04-22",
		"confirmation_method": "Unconfirmed. Just following pattern I'm using for adding other UUID16s from chipmakers in the assigned numbers doc.",
		"confirmation_confidence": "2/10",
		"2thprint_ChipMaker_GATTprint": "True",
		"Vendor_Specific_UUIDs": {
			"fef5": "Service/Advertisement: Renesas: Software Update Over-The-Air (OTA) Receiver (SUOTAR)) for firmware updates."
		},
		"comment": "The UUID fef5 was originally assigned to Dialog per the member_uuids.yaml, but it's documented in CLUES how it's used by Renesas currently"
	},
	"Espressif GATTPrints": {
		"comment": "I don't think this is official, but rather just something someone decided to come up with for themselves. But if it is official then it's not on the open web and might be in private SDKs.",
		"2thprint_Chip_Maker": "Espressif",
		"company_website": "https://www.espressif.com/",
		"submitted_by": "Xeno Kovah",
		"submission_date": "2024-01-01",
		"evidence_URL": {
			"Michael Angerer's BLE OTA for ESP32 1": "https://github.com/michael-angerer/esp32_ble_ota/blob/main/esp/main/gatt_svr.h",
			"Michael Angerer's BLE OTA for ESP32 2": "https://michaelangerer.dev/esp32/ble/ota/2021/06/08/esp32-ota-part-2.html"
		},
		"confirmed_by": "Xeno Kovah",
		"confirmation_date": "2024-01-01",
		"confirmation_method": "evidence_URL",
		"confirmation_confidence": "2/10",
		"2thprint_ChipMaker_GATTprint": "True",
		"Vendor_Specific_UUIDs": {
			"d6f1d96d-594c-4c53-b1c6-244a1dfde6d8": "Service: NimBLE ESP32: OTA",
			"7ad671aa-21c0-46a4-b722-270e3ae3d830": "Characteristic: NimBLE ESP32: OTA Control",
			"23408888-1f40-4cd8-9b89-ca8d45f8a5b0": "Characteristic: NimBLE ESP32: OTA Data"
		}
	},
	"Intel": {
		"comment": "This is information about GATT services which are uniquely associated with this ChipMaker",
		"2thprint_Chip_Maker": "Intel Corporation",
		"company_website": "https://intel.com",
		"submitted_by": "Xeno Kovah",
		"submission_date": "2025-04-22",
		"evidence_URL": {
			"Assigned numbers": "public/assigned_numbers/uuids/member_uuids.yaml"
		},
		"confirmed_by": "Xeno Kovah",
		"confirmation_date": "2025-04-22",
		"confirmation_method": "Unconfirmed. Just following pattern I'm using for adding other UUID16s from chipmakers in the assigned numbers doc.",
		"confirmation_confidence": "2/10",
		"2thprint_ChipMaker_GATTprint": "True",
		"Vendor_Specific_UUIDs": {
			"fc89": "Service/Advertisement: Intel: Unknown (from public/assigned_numbers/uuids/member_uuids.yaml). Not observed in wild data. (Please report if you see this!)",
			"fc8a": "Service/Advertisement: Intel: Unknown (from public/assigned_numbers/uuids/member_uuids.yaml). Not observed in wild data. (Please report if you see this!)",
			"fe66": "Service/Advertisement: Intel: Unknown (from public/assigned_numbers/uuids/member_uuids.yaml). Not observed in wild data. (Please report if you see this!)",
			"fef0": "Service/Advertisement: Intel: Unknown (from public/assigned_numbers/uuids/member_uuids.yaml). Observed in wild data."
		}
	},
	"ISSC GATTPrints": {
		"comment": "This is information about GATT services which are uniquely associated with this ChipMaker",
		"2thprint_Chip_Maker": "ISSC Technologies Corp. (acquired by Microchip Technology Inc.)",
		"company_website": "https://microchip.com",
		"submitted_by": "Xeno Kovah",
		"submission_date": "2025-04-22",
		"evidence_URL": {
			"Acquisition confirmation": "https://web.archive.org/web/20250422190221/https://ir.microchip.com/news-events/press-releases/detail/700/microchip-technology-announces-acquisition-of-issc-technologies"
		},
		"confirmed_by": "Xeno Kovah",
		"confirmation_date": "2025-04-22",
		"confirmation_method": "Unconfirmed. Just following pattern I'm using for adding other UUID16s from chipmakers in the assigned numbers doc.",
		"confirmation_confidence": "2/10",
		"2thprint_ChipMaker_GATTprint": "True",
		"Vendor_Specific_UUIDs": {
			"feda": "Service/Advertisement: (ISSC Technologies Corp.)->Microchip: Unknown (from public/assigned_numbers/uuids/member_uuids.yaml). Observed in wild data."
		}
	},
	"LAPIS": {
		"comment": "This is information about GATT services which are uniquely associated with this ChipMaker",
		"2thprint_Chip_Maker": "LAPIS Technology Co., Ltd.",
		"company_website": "https://www.rohm.com/lapis-tech",
		"submitted_by": "Xeno Kovah",
		"submission_date": "2025-04-22",
		"evidence_URL": {
			"Assigned numbers": "public/assigned_numbers/uuids/member_uuids.yaml"
		},
		"confirmed_by": "Xeno Kovah",
		"confirmation_date": "2025-04-22",
		"confirmation_method": "Unconfirmed. Just following pattern I'm using for adding other UUID16s from chipmakers in the assigned numbers doc.",
		"confirmation_confidence": "2/10",
		"2thprint_ChipMaker_GATTprint": "True",
		"Vendor_Specific_UUIDs": {
			"fe10": "Service/Advertisement: LAPIS: Unknown (from public/assigned_numbers/uuids/member_uuids.yaml). Observed in wild data."
		}
	},
	"Microchip GATTPrints": {
		"comment": "This is information about GATT services which are uniquely associated with this ChipMaker",
		"2thprint_Chip_Maker": "Microchip Technology Inc.",
		"company_website": "https://microchip.com",
		"submitted_by": "Xeno Kovah",
		"submission_date": "2025-01-19",
		"evidence_URL": {
			"UART": "https://web.archive.org/web/20240718111653/https://developerhelp.microchip.com/xwiki/bin/view/products/wireless-connectivity/ble/bm70/bm70-compact-demo-board-users-guide/transparent-uart/",
			"RN4871 BLE module": "https://web.archive.org/web/20221225142328/https://ww1.microchip.com/downloads/en/DeviceDoc/50002639A.pdf",
			"Advanced Usage of Microchip RN4020": "https://archive.org/details/advanced-useof-rn-4020-cookbook"
		},
		"confirmed_by": "Xeno Kovah",
		"confirmation_date": "2025-01-19",
		"confirmation_method": "evidence_URL",
		"confirmation_confidence": "10/10",
		"2thprint_ChipMaker_GATTprint": "True",
		"Vendor_Specific_UUIDs": {
			"49535343-fe7d-4ae5-8fa9-9fafd205e455": "Service: Microchip: Transparent UART",
			"49535343-1e4d-4bd9-ba61-23c647249616": "Characteristic: Microchip: Transparent UART Transmit (TX)",
			"49535343-8841-43f4-a8d4-ecbe34729bb3": "Characteristic: Microchip: Transparent UART Receive (RX)",
			"00035b03-58e6-07dd-021a-08123a000300": "Service: Microchip: Microchip Low energy Data Profile (MLDP)",
			"00035b03-58e6-07dd-021a-08123a000301": "Characteristic: Microchip: MLDP Data",
			"00035b03-58e6-07dd-021a-08123a0003ff": "Characteristic: Microchip: MLDP Control"
		}
	},
	"Nordic GATTPrints": {
		"comment": "This is information about GATT services which are uniquely associated with this ChipMaker",
		"2thprint_Chip_Maker": "Nordic Semiconductor",
		"company_website": "https://www.nordicsemi.com/",
		"submitted_by": "Xeno Kovah",
		"submission_date": "2024-01-01",
		"evidence_URL": {
			"Nordic UART": "https://web.archive.org/web/20240303153909/https://developer.nordicsemi.com/nRF_Connect_SDK/doc/latest/nrf/libraries/bluetooth_services/services/nus.html",
			"Nordic insecure DFU 1": "https://web.archive.org/web/20201012094636/https://nordicsemiconductor.github.io/IOS-nRF-Connect/assets/files/UserManual.pdf",
			"Nordic insecure DFU 2": "https://github.com/adafruit/Bluefruit_LE_Connect_Android/blob/master/app/src/main/java/com/adafruit/bluefruit/le/connect/ble/KnownUUIDs.java",
			"Nordic secure DFU": "https://infocenter.nordicsemi.com/index.jsp?topic=%2Fsdk_nrf5_v16.0.0%2Flib_dfu_transport_ble.html",
			"Nordic Experimental Buttonless DFU Service 1": "https://web.archive.org/web/20201012094636/https://nordicsemiconductor.github.io/IOS-nRF-Connect/assets/files/UserManual.pdf"
		},
		"confirmed_by": "Xeno Kovah",
		"confirmation_date": "2024-01-01",
		"confirmation_method": "evidence_URL",
		"confirmation_confidence": "10/10",
		"2thprint_ChipMaker_GATTprint": "True",
		"Vendor_Specific_UUIDs": {
			"fee4": "Service: Nordic: Unknown (from public/assigned_numbers/uuids/member_uuids.yaml). Observed in wild data.",
			"fee5": "Service: Nordic: Unknown (from public/assigned_numbers/uuids/member_uuids.yaml). Observed in wild data.",
			"fe58": "Service: Nordic: Unknown (from public/assigned_numbers/uuids/member_uuids.yaml). Not observed in wild data. (Please report if you see this!)",
			"fe59": "Service: Nordic: Secure Device Firmware Update (DFU)",
			"6e400001-b5a3-f393-e0a9-e50e24dcca9e": "Service: Nordic: UART",
			"6e400002-b5a3-f393-e0a9-e50e24dcca9e": "Characteristic: Nordic: UART: Receive (RX)",
			"6e400003-b5a3-f393-e0a9-e50e24dcca9e": "Characteristic: Nordic: UART: Transmit (TX)",
			"00001530-1212-efde-1523-785feabcd123": "Service: Nordic: 'Legacy'(insecure) Device Firmware Update (DFU)",
			"00001531-1212-efde-1523-785feabcd123": "Characteristic: Nordic: ('Legacy'/insecure) DFU: Control Point",
			"00001532-1212-efde-1523-785feabcd123": "Characteristic: Nordic: ('Legacy'/insecure) DFU: Packet",
			"00001534-1212-efde-1523-785feabcd123": "Characteristic: Nordic: ('Legacy'/insecure) DFU: Version",
			"0000fe59-0000-1000-8000-00805f9b34fb": "Service: Nordic: Secure Device Firmware Update (DFU)",
			"8EC90001-F315-4F60-9FB8-838830DAEA50": "Characteristic: Nordic: Secure DFU: Control Point",
			"8EC90002-F315-4F60-9FB8-838830DAEA50": "Characteristic: Nordic: Secure DFU: Packet",
			"8E400001-F315-4F60-9FB8-838830DAEA50": "Service: Nordic: Experimental Buttonless DFU"
		},
		"TODO: GATT values": "Need to handle cases like 2a28 'Software Revision String' and then have a regex like '^nRF52' and have that be a Nordic ChipMakerPrint"
	},
	"NXP GATTPrints": {
		"comment": "This is information about GATT services which are uniquely associated with this ChipMaker",
		"2thprint_Chip_Maker": "(Quintic->)NXP",
		"company_website": "https://www.nxp.com/",
		"submitted_by": "Xeno Kovah",
		"submission_date": "2024-09-02",
		"evidence_URL": {
			"QN902x OTA Profile Guide": "https://web.archive.org/web/20230405132905/https://www.nxp.com/docs/en/user-guide/UM10993.pdf"
		},
		"confirmed_by": "Xeno Kovah",
		"confirmation_date": "2024-09-02",
		"confirmation_method": "evidence_URL & looking at collected GATT data",
		"confirmation_confidence": "10/10",
		"2thprint_ChipMaker_GATTprint": "True",
		"Vendor_Specific_UUIDs": {
			"fee8": "Service: (Quintic->)NXP: OTA firmware update",
			"fee9": "Service: (Quintic->)NXP: Unknown (from public/assigned_numbers/uuids/member_uuids.yaml). Observed in wild data.",
			"0000fee8-0000-1000-8000-00805f9b34fb": "Service: (Quintic->)NXP: OTA firmware update",
			"003784cf-f7e3-55b4-6c4c-9fd140100a16": "Characteristic: (Quintic->)NXP: OTA TX",
			"013784cf-f7e3-55b4-6c4c-9fd140100a16": "Characteristic: (Quintic->)NXP: OTA RX"
		}
	},
	"Realtek": {
		"2thprint_Chip_Maker": "Realtek Semiconductor Corp.",
		"company_website": "https://www.realtek.com/",
		"submitted_by": "Xeno Kovah",
		"submission_date": "2024-04-22",
		"evidence_URL": {
			"Assigned numbers": "public/assigned_numbers/uuids/member_uuids.yaml",
			"'DataTrans(fer)' Vendor-specific UUID": "https://web.archive.org/web/20250730111949/https://github.com/songjw0820/AmebaPro2_SDK_v9.0a/blob/7cb6eae4736e220db2165dafdb5cd4f7afdc2f25/component/bluetooth/rtk_stack/example/bt_datatrans/bt_datatrans_module_param_config.c#L38"
		},
		"confirmed_by": "Xeno Kovah",
		"confirmation_date": "2024-04-22",
		"confirmation_method": "Unconfirmed. Just following pattern I'm using for adding other UUID16s from chipmakers in the assigned numbers doc.",
		"confirmation_confidence": "2/10",
		"2thprint_ChipMaker_GATTprint": "True",
		"Vendor_Specific_UUIDs": {
			"fec5": "Service: Realtek: Unknown (from public/assigned_numbers/uuids/member_uuids.yaml). Observed in wild data.",
			"12a24d2e-fe14-488e-93d2-173c5a010000": "Service: Realtek: DataTrans(fer) custom GATT service."
		}
	},
	"Silicon Labs GATTPrints": {
		"comment": "This is information about GATT services which are uniquely associated with this ChipMaker",
		"2thprint_Chip_Maker": "Silicon Laboratories",
		"company_website": "https://www.silabs.com/",
		"submitted_by": "Xeno Kovah",
		"submission_date": "2024-01-01",
		"security_research_urls": {
			"Finding New Bluetooth Low Energy Exploits via Reverse Engineering Multiple Vendors' Firmwares": "https://web.archive.org/web/20240618170612/https://darkmentor.com/publication/2020-08-blackhat/",
			"Breaking Secure Boot on the Silicon Labs Gecko platform": "https://darkmentor.com/bt.html#Breaking%20Secure%20Boot%20on%20the%20Silicon%20Labs%20Gecko%20platform:%5B%5BBreaking%20Secure%20Boot%20on%20the%20Silicon%20Labs%20Gecko%20platform%5D%5D%20%5B%5BBluetooth%20Security%20Timeline%5D%5D%20%24%3A%2FTagManager",
			"Clashing EV Chargers in The Pentesting Arena": "https://darkmentor.com/bt.html#Clashing%20EV%20Chargers%20in%20The%20Pentesting%20Arena:%5B%5BClashing%20EV%20Chargers%20in%20The%20Pentesting%20Arena%5D%5D%20%5B%5BBluetooth%20Security%20Timeline%5D%5D%20%24%3A%2FTagManager"
		},
		"evidence_URL": {
			"Silicon Labs BGX": "https://web.archive.org/web/20240518104416/https://docs.silabs.com/gecko-os/1/bgx/latest/ble-services",
			"Silicon Labs OTA": "https://web.archive.org/web/20240229185430/https://blog.quarkslab.com/breaking-secure-boot-on-the-silicon-labs-gecko-platform.html"
		},
		"confirmed_by": "Xeno Kovah",
		"confirmation_date": "2024-01-01",
		"confirmation_method": "evidence_URL",
		"confirmation_confidence": "10/10",
		"2thprint_ChipMaker_GATTprint": "True",
		"Vendor_Specific_UUIDs": {
			"1D14D6EE-FD63-4FA1-BFA4-8F47B42119F0": "Service: Silicon Labs: Over The Air firmware update protocol",
			"F7BF3564-FB6D-4E53-88A4-5E37E0326063": "Characteristic: Silicon Labs: Over The Air firmware update protocol: Control Endpoint",
			"984227F3-34FC-4045-A5D0-2C581F81A153": "Characteristic: Silicon Labs: Over The Air firmware update protocol: Data Endpoint",
			"331a36f5-2459-45ea-9d95-6142f0c4b307": "Service: Silicon Labs: BGX Xpress Streaming",
			"a9da6040-0823-4995-94ec-9ce41ca28833": "Characteristic: Silicon Labs: BGX: Peripheral Receive (RX)",
			"a73e9a10-628f-4494-a099-12efaf72258f": "Characteristic: Silicon Labs: BGX: Peripheral Transmit (TX)",
			"75a9f022-af03-4e41-b4bc-9de90a47d50b": "Characteristic: Silicon Labs: BGX: Stream Mode (Mode)"
		}
	},
	"ST BlueNRG GATTPrints": {
		"comment": "This is information about GATT services which are uniquely associated with this ChipMaker",
                "2thprint_Chip": "ST BlueNRG (version unknown)",
		"2thprint_Chip_Maker": "STMicro",
		"company_website": "https://www.st.com/",
		"submitted_by": "Xeno Kovah",
		"submission_date": "2024-09-02",
		"evidence_URL": {
			"BlueNRG OTA service implementation": "https://github.com/winfred-lu/stm32f4-bluenrg/blob/master/Bluetooth_LE/BlueNRG_OTA/src/btl.c",
			"Uncovering Vulnerabilities of Bluetooth Low Energy IoT from Companion Mobile Apps with Ble-Guuide": "https://darkmentor.com/bt.html#Uncovering%20Vulnerabilities%20of%20Bluetooth%20Low%20Energy%20IoT%20from%20Companion%20Mobile%20Apps%20with%20Ble-Guuide"
		},
		"confirmed_by": "Xeno Kovah",
		"confirmation_date": "2024-09-02",
		"confirmation_method": "evidence_URLs only, no actual data seen for this",
		"confirmation_confidence": "5/10",
		"2thprint_ChipMaker_GATTprint": "True",
		"Vendor_Specific_UUIDs": {
			"8a97f7c0-8506-11e3-baa7-0800200c9a66": "Service: ST BlueNRG OTA firmware update",
			"122e8cc0-8508-11e3-baa7-0800200c9a66": "Characteristic: ST BlueNRG OTA: Image",
			"210f99f0-8508-11e3-baa7-0800200c9a66": "Characteristic: ST BlueNRG OTA: New Image",
			"2691aa80-8508-11e3-baa7-0800200c9a66": "Characteristic: ST BlueNRG OTA: New Image TU Content",
			"2bdc5760-8508-11e3-baa7-0800200c9a66": "Characteristic: ST BlueNRG OTA: ExpectedImageTUSeqNumber",
			"d973f2e0-b19e-11e2-9e96-0800200c9a66": "Service: ST sample code example UUID",
			"d973f2e1-b19e-11e2-9e96-0800200c9a66": "Characteristic: ST sample code example UUID: notify",
			"d973f2e2-b19e-11e2-9e96-0800200c9a66": "Characteristic: ST sample code example UUID: writable"
		}
	},
	"ST STM32WBA GATTPrints": {
		"comment": "This is information about GATT services which are uniquely associated with this ChipMaker",
                "2thprint_Chip": "ST STM32WBA (version unknown)",
		"2thprint_Chip_Maker": "STMicro",
		"company_website": "https://www.st.com/",
		"submitted_by": "Xeno Kovah",
		"submission_date": "2024-09-02",
		"evidence_URL": {
			"Uncovering Vulnerabilities of Bluetooth Low Energy IoT from Companion Mobile Apps with Ble-Guuide": "https://darkmentor.com/bt.html#Uncovering%20Vulnerabilities%20of%20Bluetooth%20Low%20Energy%20IoT%20from%20Companion%20Mobile%20Apps%20with%20Ble-Guuide",
			"STM32WBA Bluetooth® LE – Peer 2 Peer Applications": "https://web.archive.org/web/20240522153704/https://wiki.st.com/stm32mcu/wiki/Connectivity:STM32WBA_Peer_To_Peer",
			"STM32WBA Bluetooth® LE – Peer 2 Peer Router": "https://web.archive.org/web/20240425081329/https://wiki.st.com/stm32mcu/wiki/Connectivity:STM32WBA_Peer_To_Peer_Router",
			"STM32WBA Bluetooth® LE – Data throughput measurement": "https://web.archive.org/web/20240228102640/https://wiki.st.com/stm32mcu/wiki/Connectivity:STM32WBA_Data_Throughput"
		},
		"confirmed_by": "Xeno Kovah",
		"confirmation_date": "2024-09-02",
		"confirmation_method": "Primarily evidence_URLs, no actual data seen for most of these, except 0000fe40... P2P service",
		"confirmation_confidence": "10/10",
		"2thprint_ChipMaker_GATTprint": "True",
		"Vendor_Specific_UUIDs": {
			"0000fe20-cc7a-482a-984a-7f2ed5b3e58f": "Service: STM32WBA OTA firmware update",
			"0000fe22-8e22-4541-9d4c-21edae82ed19": "Characteristic: STM32WBA OTA: Base Address (Write without response)",
			"0000fe23-8e22-4541-9d4c-21edae82ed19": "Characteristic: STM32WBA OTA: Confirmation (Indication)",
			"0000fe24-8e22-4541-9d4c-21edae82ed19": "Characteristic: STM32WBA OTA: Raw Data (Write without response)",
			"0000fe40-cc7a-482a-984a-7f2ed5b3e58f": "Service: STM32WBA Peer-to-peer (P2P) service",
			"0000fe41-8e22-4541-9d4c-21edae82ed19": "Characteristic: STM32WBA P2P: LED (Write without response/Read)",
			"0000fe42-8e22-4541-9d4c-21edae82ed19": "Characteristic: STM32WBA P2P: Switch (Notify)",
			"0000feb0-cc7a-482a-984a-7f2ed5b3e58f": "Service: STM32WBA Peer-to-peer (P2P) router service",
			"0000feb1-8e22-4541-9d4c-21edae82ed19": "Characteristic: STM32WBA P2P router: Write forward (Write without response/Read)",
			"0000feb2-8e22-4541-9d4c-21edae82ed19": "Characteristic: STM32WBA P2P router: Notify forward (Notify)",
			"0000feb3-8e22-4541-9d4c-21edae82ed19": "Characteristic: STM32WBA P2P router: Device info (Notify)",
			"0000fe80-cc7a-482a-984a-7f2ed5b3e58f": "Service: STM32WBA Data throughput measurement",
			"0000fe81-8e22-4541-9d4c-21edae82ed19": "Characteristic: STM32WBA throughput: Data Transfer TX (Notify)",
			"0000fe82-8e22-4541-9d4c-21edae82ed19": "Characteristic: STM32WBA throughput: Data Transfer RX (Write without response)",
			"0000fe83-8e22-4541-9d4c-21edae82ed19": "Characteristic: STM32WBA throughput: Data Transfer TX RX INFO (Notify)"
		},
		"TODO: Add stuff from here": "https://www.st.com/resource/en/user_manual/dm00550659-getting-started-with-the-bluest-protocol-and-sdk-stmicroelectronics.pdf"
	},
	"TeLink GATTPrints": {
		"comment": "This is information about GATT services which are uniquely associated with this ChipMaker",
		"2thprint_Chip_Maker": "Telink Semiconductor Co. Ltd",
		"company_website": "https://telink-semi.cn",
		"submitted_by": "Xeno Kovah",
		"submission_date": "2025-01-16",
		"evidence_URL": {
				"Open source SDK code": "https://web.archive.org/web/20250117012825/https://raw.githubusercontent.com/telink-semi/telink_b91m_btble_dual_mode_general_sdk/98b6453c5859b51feca6ec7a61b271fcb5538b8b/sdk/tlkstk/ble/service/uuid.h"
		},
		"confirmed_by": "Xeno Kovah",
		"confirmation_date": "2025-01-16",
		"confirmation_method": "evidence_URL",
		"confirmation_confidence": "10/10",
		"2thprint_ChipMaker_GATTprint": "True",
		"Vendor_Specific_UUIDs": {
			"00010203-0405-0607-0809-0a0b0c0d1910": "Service: TeLink: Serial Port Profile (if 2b10 characteristic is present) OR Mesh Light Service (if 1911 characteristic is present). Unfortunate UUID reuse!",
			"00010203-0405-0607-0809-0a0b0c0d2b10": "Characteristic: TeLink: Serial Port Profile (SPP): SERVER2CLIENT",
			"00010203-0405-0607-0809-0a0b0c0d2b11": "Characteristic: TeLink: Serial Port Profile (SPP): CLIENT2SERVER",
			"00010203-0405-0607-0809-0a0b0c0d1911": "Service: TeLink: Audio OR Characteristic: TeLink: Mesh Light Status",
			"00010203-0405-0607-0809-0a0b0c0d1912": "Service: TeLink: Over-The-Air (OTA) update OR Characteristic: TeLink: Mesh Light Command. Unfortunate UUID reuse!",
			"00010203-0405-0607-0809-0a0b0c0d2b12": "Characteristic: TeLink: Over-The-Air (OTA) update: data",
			"00010203-0405-0607-0809-0a0b0c0d2b13": "Characteristic: TeLink: Serial Port Profile: Pair",
			"00010203-0405-0607-0809-0a0b0c0d2b14": "Characteristic: TeLink: Serial Port Profile: User-defined Data",
			"00010203-0405-0607-0809-0a0b0c0d1913": "Characteristic: TeLink: Mesh Light OTA update",
			"00010203-0405-0607-0809-0a0b0c0d1914": "Characteristic: TeLink: Mesh Light Pair",
			"00010203-0405-0607-0809-0a0b0c0d1920": "Service: TeLink: TeLink Mesh (proprietary?)",
			"00010203-0405-0607-0809-0a0b0c0d1921": "Service: TeLink: Mesh LT (lighting?)"
		}
	},
	"Texas Instruments GATTPrints": {
		"comment": "This is information about GATT services which are uniquely associated with this ChipMaker",
		"2thprint_Chip_Maker": "Texas Instruments",
		"company_website": "https://www.ti.com/",
		"submitted_by": "Xeno Kovah",
		"submission_date": "2024-01-01",
		"evidence_URL": {
			"Texas Instruments: Over the Air Download (OAD) firmware update service": "https://web.archive.org/web/20240518160126/https://software-dl.ti.com/lprf/simplelink_cc2640r2_sdk/1.35.00.33/exports/docs/ble5stack/ble_user_guide/html/oad/oad_concepts.html#oad-service-0xffc0"
		},
		"confirmed_by": "Xeno Kovah",
		"confirmation_date": "2024-01-01",
		"confirmation_method": "evidence_URL",
		"confirmation_confidence": "10/10",
		"2thprint_ChipMaker_GATTprint": "True",
		"Vendor_Specific_UUIDs": {
			"f000ffc0-0451-4000-b000-000000000000": "Service: Texas Instruments: Over the Air Download (OAD) firmware update",
			"f000ffc1-0451-4000-b000-000000000000": "Characteristic: Texas Instruments: Over the Air Download (OAD) firmware update: Image Identify",
			"f000ffc2-0451-4000-b000-000000000000": "Characteristic: Texas Instruments: Over the Air Download (OAD) firmware update: Image Block",
			"f000ffc3-0451-4000-b000-000000000000": "Characteristic: Texas Instruments: Over the Air Download (OAD) firmware update: Image Count",
			"f000ffc4-0451-4000-b000-000000000000": "Characteristic: Texas Instruments: Over the Air Download (OAD) firmware update: Image Status"
		}
	},
	"Jabra Elite 3":{
		"2thprint_Chip": "Qualcomm QCC3040",
		"comment": "The idea here is that if a device looks up the GATT Model Number (0x2a24), and finds it equal to this value, it knows this record (and the ChipPrint herein) applies to the device being looked at",
		"2thprint_Chip_GATT_Model_Number": "QCC3040",
		"2thprint_Chip_Maker": "Qualcomm",
		"2thprint_Device_Model": "Jabra Elite 3",
		"2thprint_Device_Maker": "Jabra",
		"2thprint_NamePrint": "^Jabra Elite 3$",
		"short_description": "Wireless headphones",
		"company_website": "https://www.jabra.com/bluetooth-headsets/jabra-elite-3",
		"submitted_by": "Xeno Kovah",
		"submission_date": "2024-01-01",
		"evidence_URL": "Look at GATT data. 'Manufacturer Name String' (2a29) == 'Qualcomm'. Model Number String (0x2a24) == 'QCC3040'. 'Device Name' (0x2a00) == 'Jabra Elite 3'",
		"confirmed_by": "Xeno Kovah",
		"confirmation_date": "2024-01-01",
		"confirmation_method": "GATT data",
		"confirmation_confidence": "10/10",
		"misc_other_URLs": {
			"QCC30XX documentation" : "https://www.qualcomm.com/products/internet-of-things/consumer/audio/qcc30xx-series/qcc3040#Documentation"
		}
	},
	"Jabra Elite 7 Pro":{
		"2thprint_Chip": "Qualcomm QCC512x",
		"comment": "The idea here is that if a device looks up the GATT Model Number (0x2a24), and finds it equal to this value, it knows this record (and the ChipPrint herein) applies to the device being looked at",
		"2thprint_Chip_GATT_Model_Number": "QCC512x",
		"2thprint_Chip_Maker": "Qualcomm",
		"2thprint_Device_Model": "Jabra Elite 7 Pro",
		"2thprint_Device_Maker": "Jabra",
		"2thprint_NamePrint": "^Jabra Elite 7 Pro$",
		"short_description": "Wireless headphones",
		"company_website": "https://web.archive.org/web/20240225184010/https://www.jabra.com/bluetooth-headsets/jabra-elite-7-pro",
		"submitted_by": "Xeno Kovah",
		"submission_date": "2024-01-01",
		"evidence_URL": "Look at GATT data. 'Manufacturer Name String' (2a29) == 'Qualcomm'. 'Model Number String' (0x2a24) == 'QCC512x'. 'Device Name' (0x2a00) == 'Jabra Elite 7 Pro'",
		"confirmed_by": "Xeno Kovah",
		"confirmation_date": "2024-01-01",
		"confirmation_method": "GATT data",
		"confirmation_confidence": "10/10"
	},
	"Jabra Elite Active":{
		"2thprint_Chip": "Qualcomm CSR867x",
		"comment": "The idea here is that if a device looks up the GATT Model Number (0x2a24), and finds it equal to this value, it knows this record (and the ChipPrint herein) applies to the device being looked at",
		"2thprint_Chip_GATT_Model_Number": "CSR867x",
		"2thprint_Chip_Maker": "CSR(->Qualcomm)",
		"2thprint_Device_Model": "Jabra Elite Active",
		"2thprint_Device_Maker": "Jabra",
		"2thprint_NamePrint": "^Jabra Elite Active$",
		"short_description": "Wireless headphones",
		"company_website": "https://web.archive.org/web/20240225184010/https://www.jabra.com/bluetooth-headsets/",
		"submitted_by": "Xeno Kovah",
		"submission_date": "2024-01-01",
		"evidence_URL": "Look at GATT data. 'Manufacturer Name String' (2a29) == 'Qualcomm'. 'Model Number String' (0x2a24) == 'CSR867x'. (Non-GATT) Advertised Name  == 'Jabra Elite Active'",
		"confirmed_by": "Xeno Kovah",
		"confirmation_date": "2024-01-01",
		"confirmation_method": "GATT & ADV_IND data",
		"confirmation_confidence": "10/10"
	},
	"Jabra Evolve 65e":{
		"2thprint_Chip": "Qualcomm CSR867x",
		"comment": "The idea here is that if a device looks up the GATT Model Number (0x2a24), and finds it equal to this value, it knows this record (and the ChipPrint herein) applies to the device being looked at",
		"2thprint_Chip_GATT_Model_Number": "CSR867x",
		"2thprint_Chip_Maker": "CSR(->Qualcomm)",
		"2thprint_Device_Model": "Jabra Evolve 65e",
		"2thprint_Device_Maker": "Jabra",
		"2thprint_NamePrint": "^Jabra Evolve 65e$",
		"short_description": "Wireless headphones",
		"company_website": "https://web.archive.org/web/20240225184010/https://www.jabra.com/bluetooth-headsets/",
		"submitted_by": "Xeno Kovah",
		"submission_date": "2024-01-01",
		"evidence_URL": "Look at GATT data. 'Manufacturer Name String' (2a29) == 'Qualcomm'. 'Model Number String' (0x2a24) == 'CSR867x'. 'Device Name' (0x2a00) == 'Jabra Evolve 65e'",
		"confirmed_by": "Xeno Kovah",
		"confirmation_date": "2024-01-01",
		"confirmation_method": "GATT data",
		"confirmation_confidence": "10/10"
	},
	"MagTek eDynamo credit card reader": {
		"2thprint_Device_Model": "MagTek eDynamo",
		"2thprint_Device_Maker": "MagTek",
		"2thprint_NamePrint": "^eDynamo-B[A-F0-9]{6}$",
		"short_description": "MagTek eDynamo credit card reader",
		"comment": "I just wanted to capture this evidence URL which has nearby GATT UUIDs in it that I stumbled across.",
		"evidence_URL": "https://web.archive.org/web/20240629043838/https://www.magtek.com/content/documentationfiles/d99875629.pdf",
		"submitted_by": "Xeno Kovah",
		"submission_date": "2024-01-01",
		"confirmed_by": "Xeno Kovah",
		"confirmation_date": "2024-01-01",
		"confirmation_method": "GATT data",
		"confirmation_confidence": "8/10",
		"Vendor_Specific_UUIDs": {
			"0508e6f8-ad82-898f-f843-e3410cb60103": "Service: MagTek: Unknown",
			"0508e6f8-ad82-898f-f843-e3410cb60200": "Characteristic: MagTek: Unknown",
			"0508e6f8-ad82-898f-f843-e3410cb60201": "Characteristic: MagTek: Unknown",
			"0508e6f8-ad82-898f-f843-e3410cb60202": "Characteristic: MagTek: Unknown",
			"0508e6f8-ad82-898f-f843-e3410cb60203": "Characteristic: MagTek: Unknown"
		}
	},
	"Windows Laptop": {
		"2thprint_Device_Model": "Windows laptop",
		"comment": "This NamePrint is the default value used for a Windows hostname, which is then used for a Bluetooth Device Name in some Microsoft beacon packets. AFAIK it will be constant over time, and unique to a given host.",
		"2thprint_NamePrint": "^LAPTOP-[0-9A-Z]{8}",
		"NamePrint_UniqueID": "True",
		"submitted_by": "Xeno Kovah",
		"submission_date": "2024-08-31",
		"evidence_URL": "The packet types are these: https://learn.microsoft.com/en-us/openspecs/windows_protocols/ms-cdp/77b446d0-8cea-4821-ad21-fabdf4d9a569, however the presence of the name seems to be out of spec, and only when NearShareAuthPolicyPermissive bit is set (based on observed data).",
		"confirmed_by": "Xeno Kovah",
		"confirmation_date": "2024-08-31",
		"confirmation_method": "Observed Microsoft MSD values",
		"confirmation_confidence": "8/10"
	},
	"Windows Desktop": {
		"2thprint_Device_Model": "Windows desktop",
		"comment": "This NamePrint is the default value used for a Windows hostname, which is then used for a Bluetooth Device Name in some Microsoft beacon packets. AFAIK it will be constant over time, and unique to a given host.",
		"2thprint_NamePrint": "^DESKTOP-[0-9A-Z]{7}",
		"NamePrint_UniqueID": "True",
		"submitted_by": "Xeno Kovah",
		"submission_date": "2024-08-31",
		"evidence_URL": "The packet types are these: https://learn.microsoft.com/en-us/openspecs/windows_protocols/ms-cdp/77b446d0-8cea-4821-ad21-fabdf4d9a569, however the presence of the name seems to be out of spec, and only when NearShareAuthPolicyPermissive bit is set (based on observed data).",
		"confirmed_by": "Xeno Kovah",
		"confirmation_date": "2024-08-31",
		"confirmation_method": "Observed Microsoft MSD values",
		"confirmation_confidence": "8/10"
	},
	"Eddystone GATT UUIDs": {
		"short_description": "Eddystone GATT UUIDs",
		"comment": "I just wanted to capture this evidence URL which has nearby GATT UUIDs in it that I stumbled across.",
		"evidence_URL": "https://github.com/google/eddystone/blob/master/configuration-service/README.md",
		"submitted_by": "Xeno Kovah",
		"submission_date": "2024-09-04",
		"confirmed_by": "Xeno Kovah",
		"confirmation_date": "2024-09-04",
		"confirmation_method": "evidence_URL + GATT data",
		"confirmation_confidence": "10/10",
		"Vendor_Specific_UUIDs": {
			"a3c87500-8ed3-4bdf-8a39-a01bebede295": "Service: Eddystone: Eddystone Configuration Service",
			"a3c87501-8ed3-4bdf-8a39-a01bebede295": "Characteristic: Eddystone: Capabilities",
			"a3c87502-8ed3-4bdf-8a39-a01bebede295": "Characteristic: Eddystone: Active Slot",
			"a3c87503-8ed3-4bdf-8a39-a01bebede295": "Characteristic: Eddystone: Advertising Interval",
			"a3c87504-8ed3-4bdf-8a39-a01bebede295": "Characteristic: Eddystone: Radio Tx Power",
			"a3c87505-8ed3-4bdf-8a39-a01bebede295": "Characteristic: Eddystone: (Advanced) Advertised Tx Power",
			"a3c87506-8ed3-4bdf-8a39-a01bebede295": "Characteristic: Eddystone: Lock State",
			"a3c87507-8ed3-4bdf-8a39-a01bebede295": "Characteristic: Eddystone: Unlock",
			"a3c87508-8ed3-4bdf-8a39-a01bebede295": "Characteristic: Eddystone: Public ECDH Key",
			"a3c87509-8ed3-4bdf-8a39-a01bebede295": "Characteristic: Eddystone: EID Identity Key",
			"a3c8750a-8ed3-4bdf-8a39-a01bebede295": "Characteristic: Eddystone: ADV Slot Data",
			"a3c8750b-8ed3-4bdf-8a39-a01bebede295": "Characteristic: Eddystone: (Advanced) Factory reset",
			"a3c8750c-8ed3-4bdf-8a39-a01bebede295": "Characteristic: Eddystone: (Advanced) Remain Connectable"
		}
	},
	"Sensata ELD": {
		"2thprint_Device_Model": "XT6300 or XT2400",
		"2thprint_NamePrint": "^HarpBT[0-9]{9}",
		"NamePrint_UniqueID": "True",
		"short_description": "Electronic Logging Device (ELD) for trucks",
		"submitted_by": "Xeno Kovah",
		"submission_date": "2024-01-26",
		"evidence_URL": "https://web.archive.org/web/20250126231727/https://gvzcomp.it/component/djcatalog2/?format=raw&task=download&fid=2500",
		"confirmed_by": "Xeno Kovah",
		"confirmation_date": "2024-01-26"
	},
	"Polara":{
		"2thprint_Chip_Maker": "Microchip Technology Inc.",
		"comment": "When I actually went and 2thprinted a Polara device, it returned Nordic in its LL_VERSION_IND packet. So it is probably overly broad to assign Microchip to all Polara devices, and this probably needs to be broken up on a per-model basis.",
		"short_description": "Electronic crosswalk buttons with audio recording and Bluetooth update capabilities",
		"company_website": "https://polara.com/",
		"security_research_urls": {
			"BLE Proximity Authentication Vulnerable to Relay Attacks": "https://www.youtube.com/watch?v=mvvVSTlbqEI",
			"iN/iNS/iDS 3-Wire Polara FS Android Application Manual": "https://web.archive.org/web/20240806224520/https://polara.com/wp-content/uploads/2023/02/Polara-iN3-Android-Application-Manual.pdf"
		},
		"submitted_by": "Xeno Kovah",
		"submission_date": "2025-04-21",
		"evidence_URL": "https://fccid.io/2AEIM-1089773/Internal-Photos/Internal-Photos-3491654.pdf",
		"confirmed_by": "Xeno Kovah",
		"confirmation_date": "2025-04-21",
		"confirmation_method": "APK Reverse Engineering",
		"confirmation_confidence": "10/10",
		"2thprint_ChipMaker_GATTprint": "True",
		"Vendor_Specific_UUIDs": {
			"5ee1b93c-3df6-11e4-9d9f-164230d1df67": "Service/Advertisement: Polara",
			"ad014001-3bcb-fea6-7746-c3084ad1df97": "Advertisement: Polara: WPC (Wireless Pedestrian Head Control Unit)",
			"ad015001-3bcb-fea6-7746-c3084ad1df97": "Service: Polara: WPC (Wireless Pedestrian Head Control Unit)",
			"ad015002-3bcb-fea6-7746-c3084ad1df97": "Characteristic: Polara: WPC (Wireless Pedestrian Head Control Unit)",
			"ad015003-3bcb-fea6-7746-c3084ad1df97": "Characteristic: Polara: WPC (Wireless Pedestrian Head Control Unit)",
			"b02d4001-0ba5-482b-a8ec-5bb115408951": "Advertisement: Polara: WPSE (Wireless Pedestrian System w/ Solar)",
			"b02d5001-0ba5-482b-a8ec-5bb115408951": "Service: Polara: WPSE (Wireless Pedestrian System w/ Solar)",
			"b02d5002-0ba5-482b-a8ec-5bb115408951": "Characteristic: Polara: WPSE (Wireless Pedestrian System w/ Solar)",
			"b02d5003-0ba5-482b-a8ec-5bb115408951": "Characteristic: Polara: WPSE (Wireless Pedestrian System w/ Solar)",
			"60054001-f97c-c5a3-9941-1c799c307ddf": "Advertisement: Polara: iNS or PedScout",
			"60055001-f97c-c5a3-9941-1c799c307ddf": "Service: Polara: iNS or PedScout",
			"60055002-f97c-c5a3-9941-1c799c307ddf": "Characteristic: Polara: iNS or PedScout",
			"60055003-f97c-c5a3-9941-1c799c307ddf": "Characteristic: Polara: iNS or PedScout",
			"8ee74001-818d-cf84-a142-dc849f91bee7": "Advertisement: Polara: iNX",
			"8ee75001-818d-cf84-a142-dc849f91bee7": "Service: Polara: iNX",
			"8ee75002-818d-cf84-a142-dc849f91bee7": "Characteristic: Polara: iNX",
			"8ee75003-818d-cf84-a142-dc849f91bee7": "Characteristic: Polara: iNX",
			"377c4001-d305-4d3e-b6ee-67610e18b575": "Advertisement: Polara: iNXv2",
			"377c5001-d305-4d3e-b6ee-67610e18b575": "Service: Polara: iNXv2",
			"377c5002-d305-4d3e-b6ee-67610e18b575": "Characteristic: Polara: iNXv2",
			"377c5003-d305-4d3e-b6ee-67610e18b575": "Characteristic: Polara: iNXv2"
		}
	}
}
