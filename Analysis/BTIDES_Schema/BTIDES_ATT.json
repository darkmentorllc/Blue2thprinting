{
  "$id" : "https://darkmentor.com/BTIDES_Schema/BTIDES_ATT.json",
  "$schema" : "https://json-schema.org/draft/2020-12/schema",
  "description" : "BTIDES ATT packet information data types",
  "type" : "object",
  "properties" : {
    "ATTArray" : {
      "type" : "array",
      "items" : {
        "anyOf" : [ {
          "$ref" : "#/definitions/ATT_handle_enumeration"
        }, {
          "$ref" : "#/definitions/ATT_EXCHANGE_MTU_REQ"
        }, {
          "$ref" : "#/definitions/ATT_EXCHANGE_MTU_REQ2"
        }, {
          "$ref" : "#/definitions/ATT_EXCHANGE_MTU_RSP"
        }, {
          "$ref" : "#/definitions/ATT_EXCHANGE_MTU_RSP2"
        }, {
          "$ref" : "#/definitions/ATT_READ_REQ"
        }, {
          "$ref" : "#/definitions/ATT_READ_RSP"
        } ]
      }
    }
  },
  "definitions" : {
    "ATT_handle_enumeration" : {
      "$comment" : "Leaving out time and RSSI for now, because this is done over many packets, so one would need to mandate a beginning time/RSSI or ending time/RSSI, and I'm not sure I want to spec that out yet.",
      "description" : "An array of all known ATT handle number/UUID pairs.",
      "type" : "object",
      "properties" : {
        "ATT_handle_enumeration" : {
          "description" : "Each entry is a handle and UUID",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/handle_entry"
          }
        }
      }
    },
    "handle_entry" : {
      "type" : "object",
      "description" : "Structure for ATT enumeration array.",
      "required" : [ "handle", "UUID" ],
      "properties" : {
        "handle" : {
          "description" : "2-byte ATT handle number. (Handle 0 is invalid.)",
          "type" : "integer",
          "minimum" : 1,
          "maximum" : 65535
        },
        "UUID" : {
          "$ref" : "BTIDES_base.json#/definitions/UUID"
        }
      }
    },
    "ATT_ERROR_RSP" : {
      "type" : "object",
      "description" : "Structure for ATT\\_ERROR\\_RSP packet.",
      "required" : [ "opcode", "direction", "request_opcode_in_error", "attribute_handle_in_error", "error_code" ],
      "properties" : {
        "std_optional_fields" : {
          "$ref" : "BTIDES_base.json#/definitions/std_optional_fields"
        },
        "error_str" : {
          "description" : "Optional field for a human-readable error string.",
          "type" : "string"
        },
        "opcode_str" : {
          "description" : "This optional field is just for if you don't care about json file size and you want more human-readable JSON output.",
          "type" : "string",
          "const" : "ATT_ERROR_RSP"
        },
        "opcode" : {
          "description" : "ATT packet opcode.",
          "const" : 1
        },
        "direction": {
          "$ref": "BTIDES_base.json#/definitions/direction"
        },
        "request_opcode_in_error" : {
          "description" : "Opcode of the request that generated this error response.",
          "type" : "integer",
          "minimum" : 0,
          "maximum" : 255
        },
        "attribute_handle_in_error" : {
          "description" : "Handle of the attribute that generated this error response.",
          "type" : "integer",
          "minimum" : 0,
          "maximum" : 65535
        },
        "error_code" : {
          "description" : "Error code indicating the nature of the error.",
          "type" : "integer",
          "minimum" : 0,
          "maximum" : 255
        }
      }
    },
    "ATT_EXCHANGE_MTU_REQ" : {
      "type" : "object",
      "description" : "Structure for ATT\\_EXCHANGE\\_MTU\\_REQ packet.",
      "required" : [ "opcode", "direction", "client_rx_mtu" ],
      "properties" : {
        "std_optional_fields" : {
          "$ref" : "BTIDES_base.json#/definitions/std_optional_fields"
        },
        "opcode_str" : {
          "description" : "This optional field is just for if you don't care about json file size and you want more human-readable JSON output.",
          "type" : "string",
          "const" : "ATT_EXCHANGE_MTU_REQ"
        },
        "opcode" : {
          "description" : "ATT packet opcode.",
          "const" : 2
        },
        "direction": {
          "$ref": "BTIDES_base.json#/definitions/direction"
        },
        "client_rx_mtu" : {
          "description" : "2-byte \"Client Rx MTU\" from spec. Maximum number of bytes the ATT Client can receive via ATT.",
          "type" : "integer",
          "minimum" : 0,
          "maximum" : 65535
        }
      }
    },
    "ATT_EXCHANGE_MTU_REQ2" : {
      "type" : "object",
      "description" : "Structure for ATT\\_EXCHANGE\\_MTU\\_REQ packet, as single raw hex string.",
      "required" : [ "opcode", "direction", "full_pkt_hex_str" ],
      "properties" : {
        "std_optional_fields" : {
          "$ref" : "BTIDES_base.json#/definitions/std_optional_fields"
        },
        "opcode_str" : {
          "description" : "This optional field is just for if you don't care about json file size and you want more human-readable JSON output.",
          "type" : "string",
          "const" : "ATT_EXCHANGE_MTU_REQ"
        },
        "opcode" : {
          "description" : "ATT packet opcode.",
          "const" : 2
        },
        "direction": {
          "$ref": "BTIDES_base.json#/definitions/direction"
        },
        "full_pkt_hex_str" : {
          "$ref" : "BTIDES_base.json#/definitions/full_pkt_hex_str"
        }
      }
    },
    "ATT_EXCHANGE_MTU_RSP" : {
      "type" : "object",
      "description" : "Structure for ATT\\_EXCHANGE\\_MTU\\_RSP packet.",
      "required" : [ "opcode", "direction", "server_rx_mtu" ],
      "properties" : {
        "std_optional_fields" : {
          "$ref" : "BTIDES_base.json#/definitions/std_optional_fields"
        },
        "opcode_str" : {
          "description" : "ATT packet opcode.",
          "type" : "string",
          "const" : "ATT_EXCHANGE_MTU_RSP"
        },
        "opcode" : {
          "description" : "ATT packet opcode.",
          "const" : 3
        },
        "direction": {
          "$ref": "BTIDES_base.json#/definitions/direction"
        },
        "server_rx_mtu" : {
          "description" : "2-byte \"Server Rx MTU\" from spec. Maximum number of bytes the ATT Server can receive via ATT.",
          "type" : "integer",
          "minimum" : 0,
          "maximum" : 65535
        }
      }
    },
    "ATT_EXCHANGE_MTU_RSP2" : {
      "type" : "object",
      "description" : "Structure for ATT\\_EXCHANGE\\_MTU\\_RSP packet, as single raw hex string.",
      "required" : [ "opcode", "direction", "full_pkt_hex_str" ],
      "properties" : {
        "std_optional_fields" : {
          "$ref" : "BTIDES_base.json#/definitions/std_optional_fields"
        },
        "opcode_str" : {
          "description" : "This optional field is just for if you don't care about json file size and you want more human-readable JSON output.",
          "type" : "string",
          "const" : "ATT_EXCHANGE_MTU_RSP"
        },
        "opcode" : {
          "description" : "Optional field just if you don't want to look up the opcode for this packet type.",
          "const" : 3
        },
        "direction": {
          "$ref": "BTIDES_base.json#/definitions/direction"
        },
        "full_pkt_hex_str" : {
          "$ref" : "BTIDES_base.json#/definitions/full_pkt_hex_str"
        }
      }
    },
    "ATT_FIND_INFORMATION_REQ" : {
      "type" : "object",
      "description" : "Structure for ATT\\_FIND\\_INFORMATION\\_REQ packet.",
      "required" : [ "opcode", "direction", "start_handle", "end_handle" ],
      "properties" : {
        "std_optional_fields" : {
          "$ref" : "BTIDES_base.json#/definitions/std_optional_fields"
        },
        "opcode_str" : {
          "description" : "This optional field is just for if you don't care about json file size and you want more human-readable JSON output.",
          "type" : "string",
          "const" : "ATT_FIND_INFORMATION_REQ"
        },
        "opcode" : {
          "description" : "ATT packet opcode.",
          "const" : 4
        },
        "direction": {
          "$ref": "BTIDES_base.json#/definitions/direction"
        },
        "start_handle" : {
          "description" : "First requested handle number.",
          "type" : "integer",
          "minimum" : 0,
          "maximum" : 65535
        },
        "end_handle" : {
          "description" : "Last requested handle number.",
          "type" : "integer",
          "minimum" : 0,
          "maximum" : 65535
        }
      }
    },
    "ATT_FIND_INFORMATION_RSP" : {
      "type" : "object",
      "description" : "Structure for ATT\\_FIND\\_INFORMATION\\_RSP packet.",
      "required" : [ "opcode", "direction", "format", "information_data" ],
      "properties" : {
        "std_optional_fields" : {
          "$ref" : "BTIDES_base.json#/definitions/std_optional_fields"
        },
        "opcode_str" : {
          "description" : "This optional field is just for if you don't care about json file size and you want more human-readable JSON output.",
          "type" : "string",
          "const" : "ATT_FIND_INFORMATION_RSP"
        },
        "opcode" : {
          "description" : "ATT packet opcode.",
          "const" : 5
        },
        "direction": {
          "$ref": "BTIDES_base.json#/definitions/direction"
        },
        "format" : {
          "description" : "Format of the information data (1 = handles and 16-bit UUIDs, 2 = handles and 128-bit UUIDs).",
          "type" : "integer",
          "enum" : [ 1, 2 ]
        },
        "information_data" : {
          "$comment" : "I know this name is sort of generic, but that's the name used in the spec.",
          "description" : "List of handle and UUID (16 or 128) pairs.",
          "type" : "array",
          "items" : {
            "type" : "object",
            "required" : [ "handle", "UUID" ],
            "properties" : {
              "handle" : {
                "description" : "Handle number.",
                "type" : "integer",
                "minimum" : 0,
                "maximum" : 65535
              },
              "UUID" : {
                "description" : "UUID associated with the handle.",
                "$ref" : "BTIDES_base.json#/definitions/UUID"
              }
            }
          }
        }
      }
    },
    "ATT_READ_REQ" : {
      "type" : "object",
      "description" : "Structure for ATT\\_READ\\_REQ packet.",
      "required" : [ "opcode", "direction", "handle" ],
      "properties" : {
        "std_optional_fields" : {
          "$ref" : "BTIDES_base.json#/definitions/std_optional_fields"
        },
        "opcode_str" : {
          "description" : "This optional field is just for if you don't care about json file size and you want more human-readable JSON output.",
          "type" : "string",
          "const" : "ATT_READ_REQ"
        },
        "direction": {
          "$ref": "BTIDES_base.json#/definitions/direction"
        },
        "opcode" : {
          "description" : "ATT packet opcode.",
          "const" : 10
        },
        "handle" : {
          "description" : "Handle being read from.",
          "type" : "integer",
          "minimum" : 0,
          "maximum" : 65535
        }
      }
    },
    "ATT_READ_RSP" : {
      "type" : "object",
      "description" : "Structure for ATT\\_READ\\_RSP packet.",
      "required" : [ "opcode", "direction", "handle" ],
      "properties" : {
        "std_optional_fields" : {
          "$ref" : "BTIDES_base.json#/definitions/std_optional_fields"
        },
        "opcode_str" : {
          "description" : "This optional field is just for if you don't care about json file size and you want more human-readable JSON output.",
          "type" : "string",
          "const" : "ATT_READ_RSP"
        },
        "direction": {
          "$ref": "BTIDES_base.json#/definitions/direction"
        },
        "opcode" : {
          "description" : "ATT packet opcode.",
          "const" : 11
        },
        "value_hex_str" : {
          "description" : "Value read from a handle, as a hex string.",
          "type" : "string"
        }
      }
    },
    "ATT_READ_BY_GROUP_TYPE_REQ" : {
      "type" : "object",
      "description" : "Structure for ATT\\_READ\\_BY\\_GROUP\\_TYPE\\_REQ packet.",
      "required" : [ "direction", "opcode", "start_handle", "end_handle", "group_type" ],
      "properties" : {
        "std_optional_fields" : {
          "$ref" : "BTIDES_base.json#/definitions/std_optional_fields"
        },
        "opcode_str" : {
          "description" : "This optional field is just for if you don't care about json file size and you want more human-readable JSON output.",
          "type" : "string",
          "const" : "ATT_READ_BY_GROUP_TYPE_REQ"
        },
        "direction": {
          "$ref": "BTIDES_base.json#/definitions/direction"
        },
        "opcode" : {
          "description" : "ATT packet opcode.",
          "const" : 10
        },
        "start_handle" : {
          "description" : "First requested handle number.",
          "type" : "integer",
          "minimum" : 0,
          "maximum" : 65535
        },
        "end_handle" : {
          "description" : "Last requested handle number.",
          "type" : "integer",
          "minimum" : 0,
          "maximum" : 65535
        },
        "group_type" : {
          "description" : "2-byte or 16-byte UUID to find.",
          "$ref" : "BTIDES_base.json#/definitions/UUID"
        }
      }
    },
    "ATT_READ_BY_GROUP_TYPE_RSP" : {
      "type" : "object",
      "description" : "Structure for ATT\\_READ\\_BY\\_GROUP\\_TYPE\\_RSP packet.",
      "required" : [ "direction", "opcode", "attribute_data_list" ],
      "properties" : {
        "std_optional_fields" : {
          "$ref" : "BTIDES_base.json#/definitions/std_optional_fields"
        },
        "opcode_str" : {
          "description" : "This optional field is just for if you don't care about json file size and you want more human-readable JSON output.",
          "type" : "string",
          "const" : "ATT_READ_BY_GROUP_TYPE_RSP"
        },
        "direction": {
          "$ref": "BTIDES_base.json#/definitions/direction"
        },
        "opcode" : {
          "description" : "ATT packet opcode.",
          "const" : 11
        },
        "attribute_data_list" : {
          "description" : "List of attribute data.",
          "type" : "array",
          "items" : {
            "type" : "object",
            "required" : [ "attribute_handle", "end_group_handle", "UUID" ],
            "properties" : {
              "attribute_handle" : {
                "description" : "Attribute handle (effectively the handle representing the start of the group.)",
                "type" : "integer",
                "minimum" : 0,
                "maximum" : 65535
              },
              "end_group_handle" : {
                "description" : "End group handle number.",
                "type" : "integer",
                "minimum" : 0,
                "maximum" : 65535
                },
              "UUID" : {
                "description" : "\"Value for the attribute\" according to the spec, but in practice because ATT_READ_BY_GROUP_TYPE_RSP can only be called on group types 0x2800 (primary service) and 0x2801 (secondary service), this is the UUID of the service, and it's just incidental to the larger point of finding the beginning and end handles that bound the service.)",
                "$ref" : "BTIDES_base.json#/definitions/UUID"
              }
            }
          }
        }
      }
    }
  }
}